// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication2.DL;

#nullable disable

namespace DL.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241210230510_Migration8")]
    partial class Migration8
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebApplication2.BL.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentId"), 1L, 1);

                    b.Property<int>("BabyId")
                        .HasColumnType("int");

                    b.Property<int>("NurseId")
                        .HasColumnType("int");

                    b.HasKey("AppointmentId");

                    b.HasIndex("BabyId")
                        .IsUnique();

                    b.HasIndex("NurseId")
                        .IsUnique();

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("WebApplication2.BL.Baby", b =>
                {
                    b.Property<int>("BabyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BabyId"), 1L, 1);

                    b.Property<string>("BabyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BabyId");

                    b.ToTable("Babies");
                });

            modelBuilder.Entity("WebApplication2.BL.Nurse", b =>
                {
                    b.Property<int>("NurseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NurseId"), 1L, 1);

                    b.Property<string>("NurseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("experirnse")
                        .HasColumnType("int");

                    b.HasKey("NurseId");

                    b.ToTable("Nursee");
                });

            modelBuilder.Entity("WebApplication2.BL.Appointment", b =>
                {
                    b.HasOne("WebApplication2.BL.Baby", null)
                        .WithOne("Appointment")
                        .HasForeignKey("WebApplication2.BL.Appointment", "BabyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication2.BL.Nurse", null)
                        .WithOne("Appointments")
                        .HasForeignKey("WebApplication2.BL.Appointment", "NurseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication2.BL.Baby", b =>
                {
                    b.Navigation("Appointment")
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication2.BL.Nurse", b =>
                {
                    b.Navigation("Appointments")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
